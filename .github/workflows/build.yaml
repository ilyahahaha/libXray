name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            os: ubuntu-latest
          - goos: linux
            goarch: arm64
            os: ubuntu-latest
          - goos: windows
            goarch: amd64
            os: ubuntu-latest
          - goos: windows
            goarch: arm64
            os: ubuntu-latest
          - goos: darwin
            goarch: amd64
            os: macos-latest
          - goos: darwin
            goarch: arm64
            os: macos-latest
          - goos: android
            goarch: arm64
            os: ubuntu-latest
          - goos: ios
            goarch: arm64
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.4'

    - name: Install gomobile for mobile builds
      if: matrix.goos == 'android' || matrix.goos == 'ios'
      run: |
        go install golang.org/x/mobile/cmd/gomobile@latest
        go get golang.org/x/mobile/bind
        gomobile init

    - name: Build for Linux/Windows/macOS
      if: matrix.goos != 'android' && matrix.goos != 'ios'
      run: go build -v -o "libxray-${{ matrix.goos }}-${{ matrix.goarch }}"

    - name: Build for Android
      if: matrix.goos == 'android'
      run: gomobile bind -target=android -androidapi 21 -o "libxray-${{ matrix.goos }}-${{ matrix.goarch }}.aar"

    - name: Build for iOS
      if: matrix.goos == 'ios'
      run: gomobile bind -target=ios -o "libXray.xcframework"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: libxray-${{ matrix.goos }}-${{ matrix.goarch }}
        path: |
          libxray-${{ matrix.goos }}-${{ matrix.goarch }}*
          libXray.xcframework
